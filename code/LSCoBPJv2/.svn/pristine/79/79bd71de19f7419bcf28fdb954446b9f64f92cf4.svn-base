package org.b_prog.lscobpjv2.bplscruntime;

import bp.BProgram;
import org.b_prog.lscobpjv2.events.lsc.LscExitEvent;
import org.b_prog.lscobpjv2.events.lsc.LscMetaEvent;
import org.b_prog.lscobpjv2.lsclang.syntax.LSC;

/**
 * A live copy of an {@link LSC}.
 * 
 * @author michael
 */
public class LiveLscCopy {
    
    private final LSC lsc;
    private final BProgram bpp;
    private final LscExitEvent.Completion completionEvent = new LscExitEvent.Completion(this);
    private final LscExitEvent.Termination terminationEvent = new LscExitEvent.Termination(this);
    
    public LiveLscCopy(LSC lsc, BProgram aBpp) {
        this.lsc = lsc;
        bpp = aBpp;
    }

    /**
     * Starts the live copy - this is where all the BThreads start to spin.
     */
    public void start() {
        
    }
    
    public LSC getLsc() {
        return lsc;
    }

    public LscExitEvent.Completion getCompletionEvent() {
        return completionEvent;
    }

    public LscExitEvent.Termination getTerminationEvent() {
        return terminationEvent;
    }
    
}
