package org.b_prog.lscobpjv2.lsclang.syntax.locations;

import java.util.Objects;
import java.util.concurrent.atomic.AtomicInteger;
import org.b_prog.lscobpjv2.lsclang.Modality.Temperature;

/**
 * A single point on a lifeline in an LSC.
 * @author michael
 */
public abstract class Location {
    
    private static final AtomicInteger idGenerator = new AtomicInteger(0);
    
    private String id;

    public abstract Temperature getTemperature();
    
    public Location( String anId ) {
        id = anId;
    }
    
    public Location() {
        this("loc-" + idGenerator.incrementAndGet() );
    }
    
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @Override
    public int hashCode() {
        int hash = 5;
        hash = 17 * hash + Objects.hashCode(this.id);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if ( obj == this ) return true;
        if ( obj == null ) return false;
        
        if (!( obj instanceof Location)) {
            return false;
        }
        final Location other = (Location) obj;
        return Objects.equals(this.id, other.id);
    }
    
    
}
